name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate changelog
        id: changelog
        run: |
          # Get previous tag
          PREV_TAG=$(git describe --abbrev=0 --tags $(git rev-list --tags --skip=1 --max-count=1) 2>/dev/null || echo "")

          if [ -z "$PREV_TAG" ]; then
            # First release
            CHANGELOG=$(git log --pretty=format:"- %s (%h)" --reverse)
          else
            # Generate changelog from previous tag
            CHANGELOG=$(git log ${PREV_TAG}..HEAD --pretty=format:"- %s (%h)" --reverse)
          fi

          # Save to file
          echo "$CHANGELOG" > CHANGELOG.txt
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            ## ðŸš€ Release ${{ github.ref_name }}

            ### Changes
            ${{ steps.changelog.outputs.changelog }}

            ### Docker Image
            ```bash
            docker pull ghcr.io/${{ github.repository }}:${{ github.ref_name }}
            ```

            ### Quick Start
            ```bash
            # Using docker-compose
            git checkout ${{ github.ref_name }}
            docker-compose up -d

            # Or direct run
            docker run -p 8000:8000 ghcr.io/${{ github.repository }}:${{ github.ref_name }}
            ```

            ### Documentation
            - [API Documentation](https://github.com/${{ github.repository }}/blob/${{ github.ref_name }}/README.md)
            - [Docker Guide](https://github.com/${{ github.repository }}/blob/${{ github.ref_name }}/README_DOCKER.md)
          draft: false
          prerelease: false

  release-notes:
    name: Post-Release Notification
    runs-on: ubuntu-latest
    needs: create-release

    steps:
      - name: Release Summary
        run: |
          echo "âœ… Release ${{ github.ref_name }} created successfully!"
          echo "ðŸ“¦ Docker image: ghcr.io/${{ github.repository }}:${{ github.ref_name }}"
          echo "ðŸ”— Release URL: https://github.com/${{ github.repository }}/releases/tag/${{ github.ref_name }}"
