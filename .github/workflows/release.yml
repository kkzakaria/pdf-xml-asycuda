name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate release notes
        id: release_notes
        run: |
          VERSION="${{ github.ref_name }}"

          # Get previous tag
          PREV_TAG=$(git describe --abbrev=0 --tags $(git rev-list --tags --skip=1 --max-count=1) 2>/dev/null || echo "")

          # Generate commit list
          if [ -z "$PREV_TAG" ]; then
            COMMITS=$(git log --pretty=format:"- %s (%h)" --reverse)
          else
            COMMITS=$(git log ${PREV_TAG}..HEAD --pretty=format:"- %s (%h)" --reverse)
          fi

          # Get PR numbers and titles from commits
          PRS=$(echo "$COMMITS" | grep -oP '#\d+' || echo "")

          # Create comprehensive release notes in French
          cat > release_notes.md << 'EOF'
          ## ðŸš€ NouveautÃ©s

          EOF

          # Add commits
          echo "$COMMITS" >> release_notes.md

          cat >> release_notes.md << EOF

          ## ðŸ“¦ Installation

          ### Via Docker (RecommandÃ©)
          \`\`\`bash
          docker pull ghcr.io/${{ github.repository }}:${VERSION}
          docker run -p 8000:8000 ghcr.io/${{ github.repository }}:${VERSION}
          \`\`\`

          ### Via Docker Compose
          \`\`\`bash
          git checkout ${VERSION}
          docker-compose up -d
          \`\`\`

          ### Via pip
          \`\`\`bash
          pip install git+https://github.com/${{ github.repository }}.git@${VERSION}
          \`\`\`

          ## ðŸ“š Documentation

          - [README Principal](https://github.com/${{ github.repository }}/blob/${VERSION}/README.md)
          - [Guide API](https://github.com/${{ github.repository }}/blob/${VERSION}/README.md#api-endpoints)
          - [Guide Docker](https://github.com/${{ github.repository }}/blob/${VERSION}/README_DOCKER.md)
          - [Documentation Claude](https://github.com/${{ github.repository }}/blob/${VERSION}/CLAUDE.md)

          ## ðŸ”— Liens Utiles

          - **Image Docker**: \`ghcr.io/${{ github.repository }}:${VERSION}\`
          - **Tag Git**: \`${VERSION}\`
          EOF

          if [ -n "$PREV_TAG" ]; then
            echo "- **Comparaison**: [\`${PREV_TAG}...${VERSION}\`](https://github.com/${{ github.repository }}/compare/${PREV_TAG}...${VERSION})" >> release_notes.md
          fi

      - name: Create Release with gh CLI
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create "${{ github.ref_name }}" \
            --title "${{ github.ref_name }} - AmÃ©lioration SystÃ¨me" \
            --notes-file release_notes.md

  release-notes:
    name: Post-Release Notification
    runs-on: ubuntu-latest
    needs: create-release

    steps:
      - name: Release Summary
        run: |
          echo "âœ… Release ${{ github.ref_name }} created successfully!"
          echo "ðŸ“¦ Docker image: ghcr.io/${{ github.repository }}:${{ github.ref_name }}"
          echo "ðŸ”— Release URL: https://github.com/${{ github.repository }}/releases/tag/${{ github.ref_name }}"
